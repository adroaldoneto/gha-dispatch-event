on: 
  repository_dispatch:
    type: [release]

# jobs:
#   expected-event:
#     runs-on: ubuntu-latest
#     if: github.event.action == 'Start Formula Workflow'
#     steps:
#       - name: Event Information
#         run: |
#           echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
#       - name: RESPONSE - Dispatch response event to INIT repository
#         run: |
#           curl -X POST https://api.github.com/repos/adroaldoneto/gha-dispatch-event-initiator/dispatches \
#           -H 'Accept: application/vnd.github.everest-preview+json' \
#           -u ${{ secrets.ACCESS_TOKEN }} \
#           --data '{"event_type": "Formula Workflow Response", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
#   unexpected-event:
#     runs-on: ubuntu-latest
#     if: github.event.action != 'Start Formula Workflow'
#     steps:
#       - name: Event Information
#         run: |
#           echo "Unexpected event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'" 

jobs:

  extract_version:
    name: extract_version-${{ github.event.client_payload.job_id }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pending status
        uses: ./.github/actions/dispatch-event
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          REPOSITORY: 'adroaldoneto/gha-dispatch-event-initiator'
          DATA: '{"event_type": "security", "client_payload": { "state": "pending", "description": "validation started", "statuses_href": "${{ github.event.client_payload.statuses_href }}" }}'

      - name: Extract branch tag
        id: version
        run: |
          echo "Branch Name: '${{ github.event.client_payload.ref_name }}'"
          REF=${{ github.event.client_payload.ref }}
          BRANCH=${REF##*/}
          VERSION="${BRANCH//release-/""}"
          echo $VERSION
          echo ::set-output name=version::$(echo $VERSION)
  build:
    name: build-${{ github.event.client_payload.job_id }}
    runs-on: ubuntu-latest
    if: github.event.action == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: adroaldoneto/gha-dispatch-event-initiator
          ref: ${{ github.event.client_payload.ref }}
      - run: |
          ls
          echo "'${{ github.event.client_payload.ref }}'"
          echo "REF: '${{ github.ref }}'"
          echo "Event Repository Name: '${{ github.event.respository.name }}'"
          echo "Event Repository Owner: '${{ github.repository_owner }}'"
          echo "Job Id: '${{ github.event.client_payload.job_id }}'"
          echo "Pull Request Event: '${{ github.event.client_payload.pull_request_event }}'"
          echo "Base Ref: '${{ github.event.client_payload.base_ref }}'"
          echo "statuses_href: '${{ github.event.client_payload.statuses_href }}'"
          exit 1

  LAST_DISPATCH_EVENT:
    runs-on: ubuntu-latest
    needs:
      - extract_version
      - build
    if: always()
    steps:
      - name: Checkout - internal repository
        uses: actions/checkout@v3
      
      - name: Join results of jobs
        id: result_of_jobs
        run: |
          RESULTS_OF_JOBS=${{ toJson(needs[*].result) }}
          echo "::set-output name=values::$RESULTS_OF_JOBS"

      - name: Last dispatch event
        uses: ./.github/actions/last-dispatch-event
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          EVENT_TYPE: 'security'
          SUCCESS_DESCRIPTION: 'validation completed successfully'
          ERROR_DESCRIPTION: 'validation with error'
          STATUSES_HREF: '${{ github.event.client_payload.statuses_href }}'
          RESULTS_OF_JOBS: ${{ steps.result_of_jobs.outputs.values }}
